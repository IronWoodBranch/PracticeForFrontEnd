{"code":"//导出一个类,它的接口模板在type文件夹的index.ts中\nimport { Dictionaries } from \"./enum/Dictionaries\";\nexport class Storage {\n    //注意泛型方法写法\n    set(key, value, expire = Dictionaries.pernament) {\n        //等号千万要注意\n        const data = {\n            value,\n            [Dictionaries.expire]: expire\n        };\n        //本来这里两个参数，键值对，我们把值和过期时间包到一个对象里传进去，然后json化\n        localStorage.setItem(key, JSON.stringify(data));\n    }\n    get(key) {\n        //\n        const value = localStorage.getItem(key);\n        //判断localstorage是否有值，有的时候连值都没有，更别谈是否过期\n        if (value) {\n            //最开始T没找到是因为get方法上没给泛型\n            //刚才用localStorage的getItem拿到的方法是Json格式的，转一下\n            const obj = JSON.parse(value);\n            const now = new Date().getTime();\n            //如果有值，再进行是否过期的判断\n            //过期就删，没过期就给返回值\n            if (typeof obj[Dictionaries.expire] == 'number' && obj[Dictionaries.expire] < now) {\n                this.remove(key);\n                return {\n                    //注意`和变量用法\n                    message: `您的${key}已过期`,\n                    value: null\n                };\n            }\n            else {\n                return {\n                    message: \"成功读取\",\n                    value: obj.value\n                };\n            }\n        }\n        else {\n            return {\n                message: '没有token',\n                value: null\n            };\n        }\n    }\n    remove(key) {\n        localStorage.removeItem(key);\n    }\n    clear() {\n        localStorage.clear();\n    }\n}\n","references":["D:/TsCode/PracticeForFrontEnd/TS/myPluginsDemo/src/enum/Dictionaries.ts","D:/TsCode/PracticeForFrontEnd/TS/myPluginsDemo/src/type/index.ts"]}
